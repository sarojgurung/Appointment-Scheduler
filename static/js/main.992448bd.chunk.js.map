{"version":3,"sources":["components/TimeIntervals.js","components/MySchedule.js","components/Coach.js","components/Coaches.js","App.js","reportWebVitals.js","index.js"],"names":["TimeIntervals","props","data","map","value","class","MySchedule","getBookingTimesRenderer","bind","day","this","coach","a","day_of_week","available_at","moment","format","available_until","startDate","Date","endDate","push","getTime","intervalValue","React","Component","Coach","className","onClick","handleClick","name","Coaches","sameCoachObj","state","coaches","setState","individualCoachAvailability","loading","totalCoaches","fetch","response","json","Array","from","reduce","obj","set","Map","values","role","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.992448bd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function TimeIntervals(props){\r\n    \r\n    // This functional class is meant to divide all the provided time intervals and display them in order\r\n    // The value is found in value[i] when inside the map function is used\r\n    // Unable to be shown in individual container/layout so far\r\n    // The logic should be in MySchedule so that the value passed can be directly rendered only here\r\n    // Basically should be making this component without any logic\r\n    // THe return value is just showing the available time for a particular coach\r\n    return (\r\n        <div>\r\n            {props.data.map(value => {\r\n                return <div><button class=\"btn w-100 btn-secondary m-1\">{value[0]}</button></div>\r\n            })}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport TimeIntervals from './TimeIntervals';\r\n\r\nclass MySchedule extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.getBookingTimesRenderer = this.getBookingTimesRenderer.bind(this);\r\n    }\r\n\r\n    // Function to get the Time Range and convert them into 30 Time Frames\r\n    getBookingTimesRenderer(day){\r\n        let timeRange = this.props.data.map(coach => {\r\n            let a = [];\r\n            if (day === coach.day_of_week){\r\n                let available_at = moment(coach.available_at, 'hh:mmA').format('HH:mm');\r\n                let available_until = moment(coach.available_until, 'hh:mmA').format('HH:mm');\r\n                let intervalValue = 30;//hardcoded for 30 mins\r\n                var startDate = new Date(\"1/1/2015 \" + available_at);\r\n                var endDate = new Date(\"1/1/2015 \" + available_until);\r\n                var offset = intervalValue * 1000 * 60;\r\n                do {\r\n                    if (startDate < endDate)\r\n                        a.push(moment(startDate).format('HH:mm'));\r\n                    startDate = new Date(startDate.getTime() + offset);  \r\n                } while(startDate < endDate);\r\n            }\r\n            return a;\r\n        })\r\n        return timeRange;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div class=\"container\">\r\n                <div class=\"row seven-cols\">\r\n                    <div class=\"col-sm-12 col-md-2\">\r\n                        <div>Monday</div>\r\n                        <TimeIntervals data={this.getBookingTimesRenderer(\"Monday\")} />\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-2\">\r\n                        <div>Tuesday</div>\r\n                        <TimeIntervals data={this.getBookingTimesRenderer(\"Tuesday\")} />\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-2\">\r\n                        <div>Wednesday</div>\r\n                        <TimeIntervals data={this.getBookingTimesRenderer(\"Wednesday\")}/>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-2\">\r\n                        <div>Thursday</div>\r\n                        <TimeIntervals data={this.getBookingTimesRenderer(\"Thursday\")}/>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-2\">\r\n                        <div>Friday</div>\r\n                        <TimeIntervals data={this.getBookingTimesRenderer(\"Friday\")}/>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-2\">\r\n                        <div>Saturday</div>\r\n                        <TimeIntervals data={this.getBookingTimesRenderer(\"Saturday\")}/>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-md-2\">\r\n                        <div>Sunday</div>\r\n                        <TimeIntervals data={this.getBookingTimesRenderer(\"Sunday\")}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MySchedule","import React from 'react';\r\n\r\nexport default function Coach(props){\r\n    // Displaying the Name of Individual Coaches to choose from\r\n    return (\r\n        <div className=\"col-xm-12 col-sm-6 col-md-4 col-lg-3\">\r\n            <button className=\"btn w-100\" onClick={()=>props.handleClick(props.name)}>\r\n                <div className=\"display-7 p-3 d-flex align-items-center justify-content-center coach-container\">{props.name}</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport MySchedule from \"./MySchedule\";\r\nimport Coach from \"./Coach\";\r\nimport '../css/styles.css';\r\n\r\nclass Coaches extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            loading: true,\r\n            coaches: null,\r\n            totalCoaches: null,\r\n            individualCoachAvailability: null\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    // Waiting for the data to be mounted from the given API\r\n    async componentDidMount(){\r\n        const url = \"https://raw.githubusercontent.com/suyogshiftcare/jsontest/main/available.json\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        this.setState({coaches: data});\r\n        this.setState({totalCoaches: Array.from(data.reduce((map, obj) => map.set(obj.name, obj), new Map()).values()), loading: false});\r\n    }\r\n\r\n    // Function to add all the times for one Coach into an array\r\n    handleClick = (name) => {\r\n        let sameCoachObj = [];\r\n        this.state.coaches.map(coach => {\r\n            if (name === coach.name){\r\n                sameCoachObj.push(coach);\r\n            }\r\n        this.setState({individualCoachAvailability: sameCoachObj});\r\n        })\r\n    }\r\n\r\n    render(){\r\n        // console.log(this.state.individualCoachAvailability);\r\n        return (\r\n            <div>\r\n                {this.state.loading \r\n                ? \r\n                <div class=\"spinner-border text-secondary\" role=\"status\">\r\n                    <span class=\"sr-only\"></span>\r\n                </div> \r\n                : \r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h2 className=\"text-secondary bolder display-1 mb-5\">Our Coaches</h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row g-3\">\r\n                        {this.state.totalCoaches.map(coach => {\r\n                            return (\r\n                                <Coach key={coach.name} name={coach.name} handleClick={this.handleClick}/>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>}\r\n                {this.state.individualCoachAvailability ? <MySchedule data={this.state.individualCoachAvailability}/> : <div></div>}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Coaches; ","import './App.css';\nimport Coaches from './components/Coaches';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          {/* <MySchedule /> */}\n          <Coaches />\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}